package task.lab11;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.ListView;
import javafx.scene.control.SelectionMode;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.layout.GridPane;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.Stage;

public class RegistrationSystem extends Application {
    List<Course> courses = new ArrayList();

    public RegistrationSystem() {
    }

    public void start(Stage primaryStage) {
        Label titleLabel = new Label("Student Registration System");
        titleLabel.setFont(Font.font("Arial", FontWeight.BOLD, 24.0));
        Label nameLabel = new Label("Name:");
        TextField nameField = new TextField();
        Label idLabel = new Label("ID:");
        TextField idField = new TextField();
        Label emailLabel = new Label("Email:");
        TextField emailField = new TextField();
        Label courseLabel = new Label("Courses:");
        ListView<Course> courseListView = new ListView();
        courseListView.getSelectionModel().setSelectionMode(SelectionMode.MULTIPLE);
        Button registerButton = new Button("Register");
        this.courses.add(new Course("OOP"));
        this.courses.add(new Course("ISE"));
        this.courses.add(new Course("IS"));
        this.courses.add(new Course("ECS"));
        courseListView.getItems().addAll(this.courses);
        registerButton.setOnAction((e) -> {
            Student student = new Student(nameField.getText(), idField.getText(), emailField.getText());
            List<Course> selectedCourses = courseListView.getSelectionModel().getSelectedItems();

            IOException exx;
            try {
                BufferedReader reader = new BufferedReader(new FileReader("C:/Users/DELL PRECISION 5530/OneDrive/Desktop/REGISTER.txt"));

                label66: {
                    try {
                        String line;
                        do {
                            if ((line = reader.readLine()) == null) {
                                break label66;
                            }
                        } while(!line.contains("ID: " + student.id));

                        Alert alert = new Alert(AlertType.ERROR);
                        alert.setTitle("Registration Error");
                        alert.setHeaderText((String)null);
                        alert.setContentText("A student with this ID is already registered.");
                        alert.showAndWait();
                    } catch (Throwable var14) {
                        try {
                            reader.close();
                        } catch (Throwable var11) {
                            var14.addSuppressed(var11);
                        }

                        throw var14;
                    }

                    reader.close();
                    return;
                }

                reader.close();
            } catch (IOException var15) {
                exx = var15;
                exx.printStackTrace();
            }

            try {
                BufferedWriter writer = new BufferedWriter(new FileWriter("C:/Users/DELL PRECISION 5530/OneDrive/Desktop/REGISTER.txt", true));

                try {
                    writer.write("Name: " + student.name + ", ID: " + student.id + ", Email: " + student.email);
                    writer.newLine();
                    Iterator var18 = selectedCourses.iterator();

                    while(true) {
                        if (!var18.hasNext()) {
                            writer.newLine();
                            break;
                        }

                        Course course = (Course)var18.next();
                        writer.write("Registered for: " + course.courseName);
                        writer.newLine();
                    }
                } catch (Throwable var12) {
                    try {
                        writer.close();
                    } catch (Throwable var10) {
                        var12.addSuppressed(var10);
                    }

                    throw var12;
                }

                writer.close();
            } catch (IOException var13) {
                exx = var13;
                exx.printStackTrace();
            }

            nameField.clear();
            idField.clear();
            emailField.clear();
            courseListView.getSelectionModel().clearSelection();
        });
        GridPane gridPane = new GridPane();
        gridPane.setPadding(new Insets(10.0, 10.0, 10.0, 10.0));
        gridPane.setVgap(5.0);
        gridPane.setHgap(5.0);
        gridPane.add(titleLabel, 0, 0, 2, 1);
        gridPane.add(nameLabel, 0, 1);
        gridPane.add(nameField, 1, 1);
        gridPane.add(idLabel, 0, 2);
        gridPane.add(idField, 1, 2);
        gridPane.add(emailLabel, 0, 3);
        gridPane.add(emailField, 1, 3);
        gridPane.add(courseLabel, 0, 4);
        gridPane.add(courseListView, 1, 4);
        gridPane.add(registerButton, 0, 5, 2, 1);
        Scene scene = new Scene(gridPane, 500.0, 400.0);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    public static void main(String[] args) {
        launch(args);
    }
}
